"use strict";const containerWorkouts=document.querySelector(".workouts"),workoutContainer__NEW=document.querySelector(".workout"),form=document.querySelector(".form"),inputType=document.querySelector(".form__input--type"),inputDistance=document.querySelector(".form__input--distance"),inputDuration=document.querySelector(".form__input--duration"),inputButton=document.querySelector(".form__btn"),message=document.querySelector(".form__messages"),Close__btn=document.querySelector(".Close__btn");class workout{date=new Date;id=(Date.now()+" ").slice(-5).trim(" ");constructor(t,o,n){this.coords=t,this.distance=o,this.duration=n}_setDescription(){this.description=`${this.workoutType[0].toUpperCase()}${this.workoutType.slice(1)} on ${["January","February","March","April","May","June","July","August","September","October","November","December"][this.date.getMonth()]} ${this.date.getDate()}`}}class running extends workout{workoutType="running";constructor(t,o,n){super(t,o,n),this.calcRunningPace(),this._setDescription()}calcRunningPace(){return this.pace=100*Math.round(this.distance/(this.duration/60))/100,this.pace}}class cycling extends workout{workoutType="cycling";constructor(t,o,n){super(t,o,n),this.calcCyclingSpeed(),this._setDescription()}calcCyclingSpeed(){return this.speed=100*Math.round(this.distance/(this.duration/60))/100,this.speed}}class walking extends workout{workoutType="walking";constructor(t,o,n){super(t,o,n),this.calcWalkingPace(),this._setDescription()}calcWalkingPace(){return this.walkingPace=100*Math.round(this.distance/(this.duration/60))/100,this.walkingPace}}class swimming extends workout{workoutType="swimming";constructor(t,o,n){super(t,o,n),this.calcSwimmingPace(),this._setDescription()}calcSwimmingPace(){return this.swimmingPace=Math.round(this.distance/1.609/(this.duration/60)*100)/100,this.swimmingPace}}const run=new running,cycle=new cycling,walk=new walking,swim=new swimming;class App{#t;#o;#n=[];#s;#e=15;constructor(){this._getLocalStorage(),inputButton.addEventListener("click",this._newWorkout.bind(this)),containerWorkouts.addEventListener("click",this._moveToPopUp.bind(this))}_getPosition(){navigator.geolocation?navigator.geolocation.getCurrentPosition(this._loadMap.bind(this),(function(){alert("Allow Mapty to know your location")})):alert("Geolocation API is not supported in your browser")}_loadMap(t){const{latitude:o}=t.coords,{longitude:n}=t.coords,s=[o,n];this.#t=L.map("map").setView(s,13),L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.#t),L.marker(s).addTo(this.#t).bindPopup("Your Current Location").openPopup(),this.#t.on("click",this._onClickMapEvent.bind(this),(function(){alert("Could not get your position")}))}_renderWorkoutMarker(t){const{lat:o,lng:n}=this.#o.latlng;L.marker([o,n]).addTo(this.#t).bindPopup(L.popup({maxWidth:250,minWidth:50,autoClose:!0,closeOnClick:!0,className:`${t.workoutType}-popup`})).setPopupContent(`\n                ${this._workoutTypeDecisions(t)} ${t.description}\n            `).openPopup()}_onClickMapEvent(t){this.#o=t,inputDistance.focus();const{lat:o,lng:n}=this.#o.latlng;L.marker([o,n]).addTo(this.#t).openPopup()}_newWorkout(t){t.preventDefault();const o=inputType.value,n=inputDistance.value,s=inputDuration.value,{lat:e,lng:i}=this.#o.latlng;let a;"running"===o&&(a=new running([e,i],n,s),this.#n.push(a)),"cycling"===o&&(a=new cycling([e,i],n,s),this.#n.push(a)),"walking"===o&&(a=new walking([e,i],n,s),this.#n.push(a)),"swimming"===o&&(a=new swimming([e,i],n,s),this.#n.push(a)),this._renderWorkoutMarker(a),this._renderWorkout(a),this._setLocalStorage(),setTimeout((function(){inputDistance.value=inputDuration.value=""}),1e3)}_workoutTypeDecisions(t){return"running"===t.workoutType?"üèÉ‚Äç‚ôÇÔ∏è":"cycling"===t.workoutType?"üö¥‚Äç‚ôÄÔ∏è":"walking"===t.workoutType?"üö∂":"swimming"===t.workoutType?"üèä":void 0}_renderWorkout(t){let o=`\n            <li class="workout workout--${t.workoutType}" data-id="${t.id}">\n                <h2 class="workout__title">${t.description}</h2>\n                <div class="workout__details">\n                    <span class="workout__icon">${this._workoutTypeDecisions(t)}</span>\n                    <span class="workout__value">${t.distance}</span> \n                    <span class="workout__unit">km</span>\n                </div>\n                <div class="workout__details">\n                    <span class="workout__icon">‚è±</span>\n                    <span class="workout__value">${t.duration}</span>\n                    <span class="workout__unit">min</span>\n                </div>\n        `;"running"===t.workoutType&&(o+=`\n                        <div class="workout__details">\n                        <span class="workout__icon">‚ö°Ô∏è</span>\n                        <span class="workout__value">${t.pace}</span>\n                        <span class="workout__unit">km/h</span>\n                    </div>\n                </li> \n            `),"cycling"===t.workoutType&&(o+=`\n                        <div class="workout__details">\n                        <span class="workout__icon">‚ö°Ô∏è</span>\n                        <span class="workout__value">${t.speed}</span>\n                        <span class="workout__unit">km/h</span>\n                    </div>\n                </li>\n            `),"walking"===t.workoutType&&(o+=`\n                        <div class="workout__details">\n                        <span class="workout__icon">‚ö°Ô∏è</span>\n                        <span class="workout__value">${t.walkingPace}</span>\n                        <span class="workout__unit">km/h</span>\n                    </div>\n                </li>\n            `),"swimming"===t.workoutType&&(o+=`\n                        <div class="workout__details">\n                        <span class="workout__icon">‚ö°Ô∏è</span>\n                        <span class="workout__value">${t.swimmingPace}</span>\n                        <span class="workout__unit">m/h</span>\n                    </div>\n                </li>\n            `),form.insertAdjacentHTML("afterend",o)}_moveToPopUp(t){if(!this.#t)return;const o=t.target.closest(".workout");o&&(this.#s=this.#n.find((t=>t.id===o.dataset.id)),this.#t.setView(this.#s.coords,this.#e,{animate:!0,pan:{duration:1}}))}_setLocalStorage(){localStorage.setItem("workouts",JSON.stringify(this.#n)),console.log(JSON.stringify(this.#n))}_getLocalStorage(){const t=JSON.parse(localStorage.getItem("workouts"));t&&(this.#n=t,this.#n.forEach((t=>{this._renderWorkout(t)})))}reset(){localStorage.removeItem("workouts"),location.reload()}}const app=new App;app._getPosition();
//# sourceMappingURL=Mapty__HTML.9a584b87.js.map
